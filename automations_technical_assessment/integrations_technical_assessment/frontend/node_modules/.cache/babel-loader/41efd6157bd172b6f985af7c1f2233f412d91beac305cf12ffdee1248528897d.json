{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\mohit\\\\assessment\\\\test\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\airtable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AirtableIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/airtable/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'Airtable Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/airtable/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Airtable'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n\n  // Function to disconnect from Airtable\n  const handleDisconnectClick = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      await axios.post(`http://localhost:8000/integrations/airtable/disconnect`, formData);\n      setIsConnected(false);\n      setIntegrationParams({}); // Clear integration params\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      alert(e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleDisconnectClick,\n        children: \"Disconnect from Airtable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleConnectClick,\n        disabled: isConnecting,\n        children: isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }, this) : 'Connect to Airtable'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(AirtableIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = AirtableIntegration;\nvar _c;\n$RefreshReg$(_c, \"AirtableIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","AirtableIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","handleDisconnectClick","_e$response3","_e$response3$data","sx","mt","children","display","alignItems","justifyContent","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/mohit/assessment/test/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/airtable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    CircularProgress\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const AirtableIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // Function to open OAuth in a new window\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/airtable/authorize`, formData);\n            const authURL = response?.data;\n\n            const newWindow = window.open(authURL, 'Airtable Authorization', 'width=600, height=600');\n\n            // Polling for the window to close\n            const pollTimer = window.setInterval(() => {\n                if (newWindow?.closed !== false) { \n                    window.clearInterval(pollTimer);\n                    handleWindowClosed();\n                }\n            }, 200);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    // Function to handle logic when the OAuth window closes\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/airtable/credentials`, formData);\n            const credentials = response.data; \n            if (credentials) {\n                setIsConnecting(false);\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'Airtable' }));\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    // Function to disconnect from Airtable\n    const handleDisconnectClick = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            await axios.post(`http://localhost:8000/integrations/airtable/disconnect`, formData);\n            setIsConnected(false);\n            setIntegrationParams({}); // Clear integration params\n        } catch (e) {\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    useEffect(() => {\n        setIsConnected(integrationParams?.credentials ? true : false);\n    }, [integrationParams]);\n\n    return (\n        <Box sx={{ mt: 2 }}>\n            Parameters\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\n                {isConnected ? (\n                    <Button\n                        variant='contained'\n                        color='error'\n                        onClick={handleDisconnectClick}\n                    >\n                        Disconnect from Airtable\n                    </Button>\n                ) : (\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={handleConnectClick}\n                        disabled={isConnecting}\n                    >\n                        {isConnecting ? <CircularProgress size={20} /> : 'Connect to Airtable'}\n                    </Button>\n                )}\n            </Box>\n        </Box>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}