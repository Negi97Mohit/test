{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\mohit\\\\assessment\\\\test\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data.authorization_url;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'HubSpot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n\n  // Function to disconnect from HubSpot\n  const handleDisconnectClick = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      await axios.post(`http://localhost:8000/integrations/hubspot/disconnect`, formData);\n      setIsConnected(false);\n      setIntegrationParams({}); // Clear integration params\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      alert(e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleDisconnectClick,\n        children: \"Disconnect from HubSpot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleConnectClick,\n        disabled: isConnecting,\n        children: isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }, this) : 'Connect to HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(HubspotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","authorization_url","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","handleDisconnectClick","_e$response3","_e$response3$data","sx","mt","children","display","alignItems","justifyContent","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/mohit/assessment/test/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubspotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    // Function to open OAuth in a new window\r\n    const handleConnectClick = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\r\n            const authURL = response?.data.authorization_url;\r\n\r\n            const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\r\n\r\n            // Polling for the window to close\r\n            const pollTimer = window.setInterval(() => {\r\n                if (newWindow?.closed !== false) { \r\n                    window.clearInterval(pollTimer);\r\n                    handleWindowClosed();\r\n                }\r\n            }, 200);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail);\r\n        }\r\n    };\r\n\r\n    // Function to handle logic when the OAuth window closes\r\n    const handleWindowClosed = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\r\n            const credentials = response.data; \r\n            if (credentials) {\r\n                setIsConnecting(false);\r\n                setIsConnected(true);\r\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'HubSpot' }));\r\n            }\r\n            setIsConnecting(false);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail);\r\n        }\r\n    };\r\n\r\n    // Function to disconnect from HubSpot\r\n    const handleDisconnectClick = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            await axios.post(`http://localhost:8000/integrations/hubspot/disconnect`, formData);\r\n            setIsConnected(false);\r\n            setIntegrationParams({}); // Clear integration params\r\n        } catch (e) {\r\n            alert(e?.response?.data?.detail);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsConnected(integrationParams?.credentials ? true : false);\r\n    }, [integrationParams]);\r\n\r\n    return (\r\n        <Box sx={{ mt: 2 }}>\r\n            Parameters\r\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\r\n                {isConnected ? (\r\n                    <Button\r\n                        variant='contained'\r\n                        color='error'\r\n                        onClick={handleDisconnectClick}\r\n                    >\r\n                        Disconnect from HubSpot\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={handleConnectClick}\r\n                        disabled={isConnecting}\r\n                    >\r\n                        {isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}