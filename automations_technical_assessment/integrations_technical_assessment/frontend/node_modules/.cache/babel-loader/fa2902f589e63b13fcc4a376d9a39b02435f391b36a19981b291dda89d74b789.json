{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\mohit\\\\assessment\\\\test\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\notion.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotionIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [notionItems, setNotionItems] = useState([]);\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/notion/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'Notion Authorization', 'width=600, height=600');\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/notion/credentials`, formData);\n      const credentials = response.data;\n      console.log(credentials); // Add this line to inspect the credentials object\n      if (credentials) {\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Notion'\n        }));\n        fetchNotionItems(credentials);\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  const fetchNotionItems = async credentials => {\n    try {\n      const response = await axios.post(`http://localhost:8000/integrations/notion/items`, {\n        credentials\n      });\n      const items = response.data;\n      console.log(items);\n      setNotionItems(items);\n      setIntegrationParams(prev => ({\n        ...prev,\n        items\n      }));\n    } catch (e) {\n      alert('Failed to fetch Notion items.');\n    }\n  };\n  useEffect(() => {\n    if (integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials) {\n      setIsConnected(true);\n      fetchNotionItems(integrationParams.credentials);\n    }\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: () => {\n          setIsConnected(false);\n          setIntegrationParams({});\n        },\n        children: \"Disconnect from Notion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleConnectClick,\n        disabled: isConnecting,\n        children: isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }, this) : 'Connect to Notion'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), notionItems.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notion Items:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notionItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(NotionIntegration, \"ZksAhZ8cBDi8jdPL1FpbGBupdlc=\");\n_c = NotionIntegration;\nvar _c;\n$RefreshReg$(_c, \"NotionIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","NotionIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","notionItems","setNotionItems","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","console","log","prev","type","fetchNotionItems","_e$response2","_e$response2$data","items","sx","mt","children","display","alignItems","justifyContent","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","size","length","map","item","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/mohit/assessment/test/automations_technical_assessment/integrations_technical_assessment/frontend/src/integrations/notion.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    CircularProgress,\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const NotionIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [notionItems, setNotionItems] = useState([]);\n\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/notion/authorize`, formData);\n            const authURL = response?.data;\n\n            const newWindow = window.open(authURL, 'Notion Authorization', 'width=600, height=600');\n            const pollTimer = window.setInterval(() => {\n                if (newWindow?.closed !== false) { \n                    window.clearInterval(pollTimer);\n                    handleWindowClosed();\n                }\n            }, 200);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/notion/credentials`, formData);\n            const credentials = response.data; \n            console.log(credentials); // Add this line to inspect the credentials object\n            if (credentials) {\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'Notion' }));\n                fetchNotionItems(credentials);\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    const fetchNotionItems = async (credentials) => {\n        try {\n            const response = await axios.post(\n                `http://localhost:8000/integrations/notion/items`, \n                { credentials }\n            );\n            const items = response.data;\n            console.log(items); \n            setNotionItems(items);\n            setIntegrationParams(prev => ({ ...prev, items }));\n        } catch (e) {\n            alert('Failed to fetch Notion items.');\n        }\n    };\n\n    useEffect(() => {\n        if (integrationParams?.credentials) {\n            setIsConnected(true);\n            fetchNotionItems(integrationParams.credentials);\n        }\n    }, [integrationParams]);\n\n    return (\n        <Box sx={{ mt: 2 }}>\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\n                {isConnected ? (\n                    <Button\n                        variant='contained'\n                        color='error'\n                        onClick={() => {\n                            setIsConnected(false);\n                            setIntegrationParams({});\n                        }}\n                    >\n                        Disconnect from Notion\n                    </Button>\n                ) : (\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={handleConnectClick}\n                        disabled={isConnecting}\n                    >\n                        {isConnecting ? <CircularProgress size={20} /> : 'Connect to Notion'}\n                    </Button>\n                )}\n            </Box>\n            {notionItems.length > 0 && (\n                <Box sx={{ mt: 2 }}>\n                    <h3>Notion Items:</h3>\n                    <ul>\n                        {notionItems.map(item => (\n                            <li key={item.id}>{item.name}</li>\n                        ))}\n                    </ul>\n                </Box>\n            )}\n        </Box>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}